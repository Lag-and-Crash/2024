import random

keys = [217, 
 21399, 
 1411965,
 38886593,
 2450202489,
 263243197749,
 12799007271315,
 1666046252548965,
 103213939645826345,
 2646205026991262529,
 394164312816248392551,
 20272412550465755661345,
 811981043013954788627349,
 79548505317966036924107361,
 5108737406781943761348064177,
 179626632095930309122025863527,
 24094104832136931402110072275811,
 1310573373453366356011350702962709,
 112041596176877485748574071526503305,
 6609621969126546707530960536523068315,
 307370244556255643131171253417836229845,
 23628545000329686917723685931198736245365,
 1393768171792550953523572468260387516354007,
 93154713336868008269895720362678724230400099,
 5803024581251811648018996087986241366669005313,
 382713074129344227806517595036363837212683598255,
 28422499218539139152955248294088424471411070288055,
 1331426514366001990589450802974031130202549023238105,
 83914659542448459733390674158450167020094464189990825,
 4867821128864653244627499880520516017072164499936469733,
 466097465522468876508555134618618118378378328519397854137,
 34545417926314784103471259028400778822623035986705666872471,
 1858258657034090333303346372548290393794448328944037435088165,
 122115343285072562915677375673499972302104377336034266977040775,
 4058800647675363213729918561158059495807173647675378946054392695,
 338207112825252805259397284522469184349585684081355376847737361475,
 30633998312481382703665706228746899973602026153731790976068272055745,
 1274415664270591968745153501946833369666198259516063083176179463439045,
 94645139669966470384852204478865250300709547448422113854590701102475359,
 7734427565080436452711513602178408816441101302250145052098959674830787853,
 546596882336273137601183368290645161539883807284372504681448156208863277005]

import math
def sub19ab6de4(in0, in1):
    return math.gcd(in0, in1)

from sympy.ntheory.factor_ import totient
def sub7fee621d(in0):
    """
    v0 = 0
    v1 = 1
    while v1 < (in0+1):
        if sub19ab6de4(v1, in0) > 1:
            v0 += 1
        v1 += 1
    return in0 - v0

    This primarily returns number of integers from 1 to in0 inclusive that are coprime to in0
    It has a household name - Euler's Totient Function. 
    It's super relevant in number theory, and is notably used in RSA encryption/decryption
    
    You can either use the wikipedia definition to code a faster variant that requires factoring the inputs 
    (easily done via factordb or brute force as all the inputs only have prime factors up to 24 bits)
    
    or use a python module that already has the function, like from the sympy library
    """
    return totient(in0)

def sub81dd46ea(fl):
    v0 = 0
    while v0 < len(fl):
        v1 = keys[v0]
        v2 = fl[v0]
        v3 = sub7fee621d(v1)
        random.seed(v3)
        v4 = random.randint(0,255) ^ v2
        print(chr(v4), end="") # added end=""
        v0 += 1
    print()

ct = b'\x05J\x05\x0cdB\xe0\x99\xee\xb2\xbfZJ\xcf\xac>oE\xa9{B"7r\x97\x8bK\x07\xc3\xaa\xe082\xde\rD\xb6\x13e\xb8<'

sub81dd46ea(ct)


